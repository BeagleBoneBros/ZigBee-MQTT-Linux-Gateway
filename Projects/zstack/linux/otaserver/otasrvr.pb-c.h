/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: otasrvr.proto */

#ifndef PROTOBUF_C_otasrvr_2eproto__INCLUDED
#define PROTOBUF_C_otasrvr_2eproto__INCLUDED

#include <protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

typedef struct _AddressStruct AddressStruct;
typedef struct _OtaZigbeeGenericCnf OtaZigbeeGenericCnf;
typedef struct _OtaZigbeeGenericRspInd OtaZigbeeGenericRspInd;
typedef struct _OtaUpdateImageRegisterationReq OtaUpdateImageRegisterationReq;
typedef struct _OtaUpdateEnableReq OtaUpdateEnableReq;
typedef struct _OtaUpdateEnableCnf OtaUpdateEnableCnf;
typedef struct _OtaUpdateDlFinishedInd OtaUpdateDlFinishedInd;
typedef struct _OtaUpdateApplyImageReq OtaUpdateApplyImageReq;


/* --- enums --- */

/*
 * MT System ID for ZStack Network Manager Protobuf sub-system ID
 */
typedef enum _ZStackOTASysIDs {
  ZSTACK_OTASYS_IDS__RPC_SYS_PB_OTA_MGR = 20
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ZSTACK_OTASYS_IDS)
} ZStackOTASysIDs;
/*
 * Command IDs - each of these are associated with Request, Responses, Indications, and Confirm messages
 */
typedef enum _OtaMgrCmdIdT {
  OTA_MGR_CMD_ID_T__ZIGBEE_GENERIC_CNF = 0,
  OTA_MGR_CMD_ID_T__ZIGBEE_GENERIC_RSP_IND = 1,
  OTA_MGR_CMD_ID_T__OTA_UPDATE_IMAGE_REGISTERATION_REQ = 2,
  OTA_MGR_CMD_ID_T__OTA_UPDATE_ENABLE_REQ = 3,
  OTA_MGR_CMD_ID_T__OTA_UPDATE_ENABLE_CNF = 4,
  OTA_MGR_CMD_ID_T__OTA_UPDATE_DL_FINISHED_IND = 5,
  OTA_MGR_CMD_ID_T__OTA_UPDATE_APPLY_IMAGE_REQ = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OTA_MGR_CMD_ID_T)
} OtaMgrCmdIdT;
typedef enum _AddressMode {
  /*
   * Unicast/Single device (using 64 bit IEEE Address)
   */
  ADDRESS_MODE__UNICAST = 0,
  /*
   * Groupcast (using 16 bit group ID)
   */
  ADDRESS_MODE__GROUPCAST = 1,
  /*
   * Broadcast (using 16 bit broacast address)
   */
  ADDRESS_MODE__BROADCAST = 2,
  /*
   * Self addressing - referring to the gateway device itself. No address is specified
   */
  ADDRESS_MODE__SELF = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ADDRESS_MODE)
} AddressMode;
typedef enum _GenericStatus {
  GENERIC_STATUS__SUCCESS = 0,
  GENERIC_STATUS__FAILURE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GENERIC_STATUS)
} GenericStatus;
typedef enum _OtaStatus {
  /*
   * 
   */
  OTA_STATUS__OTA_SUCCESS = 0,
  /*
   * 
   */
  OTA_STATUS__INVALID_IMAGE = 1,
  /*
   * 
   */
  OTA_STATUS__REQUIRE_MORE_IMAGE = 2,
  /*
   * 
   */
  OTA_STATUS__ABORT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OTA_STATUS)
} OtaStatus;
typedef enum _OtaExecuteType {
  /*
   * execute (apply) immediate 
   */
  OTA_EXECUTE_TYPE__IMMEDIATE = 0,
  /*
   * execute delay is specified
   */
  OTA_EXECUTE_TYPE__DELAY = 1,
  /*
   * execute time is specified
   */
  OTA_EXECUTE_TYPE__TIME = 2,
  /*
   * hold execution
   */
  OTA_EXECUTE_TYPE__HOLD = 3,
  /*
   * no change (valid only if the file is already registered)
   */
  OTA_EXECUTE_TYPE__NO_CHANGE = 255
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OTA_EXECUTE_TYPE)
} OtaExecuteType;
typedef enum _OtaNotificationType {
  /*
   * Do not send notification
   */
  OTA_NOTIFICATION_TYPE__DO_NOT_SEND = 0,
  /*
   * Broadcast notification
   */
  OTA_NOTIFICATION_TYPE__BROADCAST_NOT = 1,
  /*
   * Unicast notification
   */
  OTA_NOTIFICATION_TYPE__UNICAST_NOT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OTA_NOTIFICATION_TYPE)
} OtaNotificationType;
typedef enum _OtaUpdateCnfStatus {
  /*
   * Success
   */
  OTA_UPDATE_CNF_STATUS__UPDATE_SUCCESS = 0,
  /*
   * Bad file format
   */
  OTA_UPDATE_CNF_STATUS__BAD_FILE_FORMAT = 1,
  /*
   * Cannot unregister (download is in progress)
   */
  OTA_UPDATE_CNF_STATUS__CANT_UNREGISTER = 2,
  /*
   * Out of resources
   */
  OTA_UPDATE_CNF_STATUS__OUT_OF_RESOURCES = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OTA_UPDATE_CNF_STATUS)
} OtaUpdateCnfStatus;
typedef enum _OtaEnableModes {
  /*
   * OTA download enabled 
   */
  OTA_ENABLE_MODES__DOWNLOAD_ENABLE = 0,
  /*
   * New OTA downloads disable. Active downloads are not interrupted.
   */
  OTA_ENABLE_MODES__NEW_DOWNLOAD_DISABLE = 1,
  /*
   * OTA download disable. Active downloads are immediately aborted.
   */
  OTA_ENABLE_MODES__DOWNLOAD_DISABLE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OTA_ENABLE_MODES)
} OtaEnableModes;

/* --- messages --- */

struct  _AddressStruct
{
  ProtobufCMessage base;
  /*
   * Address Mode
   */
  AddressMode addrmode;
  /*
   * Device's unique 64 bit IEEE Address (addrMode == UNICAST)
   */
  protobuf_c_boolean has_ieeeaddr;
  uint64_t ieeeaddr;
  /*
   * (uint16) group address (addrMode == GROUPCAST)
   */
  protobuf_c_boolean has_groupaddr;
  uint32_t groupaddr;
  /*
   * (uint16) broadcast address (addrMode == BROADCAST)
   */
  protobuf_c_boolean has_broadcaseaddr;
  uint32_t broadcaseaddr;
  /*
   * (uint8) Endpoint ID. If ommitted, it means referring to all endpoints.
   */
  protobuf_c_boolean has_endpointid;
  uint32_t endpointid;
};
#define ADDRESS_STRUCT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&address_struct__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0 }


/*
 * ZIGBEE_GENERIC_CNF
 */
struct  _OtaZigbeeGenericCnf
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  GenericStatus status;
  /*
   * (uint16) transaction sequence number
   */
  protobuf_c_boolean has_sequencenumber;
  uint32_t sequencenumber;
};
#define OTA_ZIGBEE_GENERIC_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_zigbee_generic_cnf__descriptor) \
    , OTA_MGR_CMD_ID_T__ZIGBEE_GENERIC_CNF, 0, 0,0 }


struct  _OtaZigbeeGenericRspInd
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  /*
   * (uint16) transaction sequence number
   */
  uint32_t sequencenumber;
  GenericStatus status;
};
#define OTA_ZIGBEE_GENERIC_RSP_IND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_zigbee_generic_rsp_ind__descriptor) \
    , OTA_MGR_CMD_ID_T__ZIGBEE_GENERIC_RSP_IND, 0, 0 }


struct  _OtaUpdateImageRegisterationReq
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  /*
   * The full path+filename of the image. The image should be located on the local file system.
   */
  char *imagepath;
  /*
   * 0 – Unregister existing image. In this case – the following arguments shall NOT be specified.
   */
  protobuf_c_boolean registerunregister;
  /*
   * 1 – Registrer new image, or update the HoldExecution state. 
   */
  /*
   * Execution timing type
   */
  OtaExecuteType executetiming;
  /*
   * Shall be specified only when executeTiming == DELAY
   */
  protobuf_c_boolean has_executiondelay;
  uint32_t executiondelay;
  /*
   * Shall be specified only when executeTiming == TIME
   */
  protobuf_c_boolean has_executiontime;
  uint32_t executiontime;
  /*
   *0 – do not change the supported device list (valid only if the file is already registered)
   */
  protobuf_c_boolean updatesupporteddevicelist;
  /*
   * Array of IEEE Addresses of the devices that this image is intended.  
   */
  size_t n_supporteddevicelist;
  uint64_t *supporteddevicelist;
  /*
   * If there are no devices in the list, the image is intended for any applicable device, 
   * or if the image already exists, there is not change to the existing device list.
   */
  /*
   * Notification type
   */
  OtaNotificationType notification;
};
#define OTA_UPDATE_IMAGE_REGISTERATION_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_update_image_registeration_req__descriptor) \
    , OTA_MGR_CMD_ID_T__OTA_UPDATE_IMAGE_REGISTERATION_REQ, NULL, 0, 0, 0,0, 0,0, 0, 0,NULL, 0 }


struct  _OtaUpdateEnableReq
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  /*
   * Download enable mode.
   */
  OtaEnableModes mode;
};
#define OTA_UPDATE_ENABLE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_update_enable_req__descriptor) \
    , OTA_MGR_CMD_ID_T__OTA_UPDATE_ENABLE_REQ, 0 }


struct  _OtaUpdateEnableCnf
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  /*
   * 0 - success, 1 - failure
   */
  protobuf_c_boolean status;
};
#define OTA_UPDATE_ENABLE_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_update_enable_cnf__descriptor) \
    , OTA_MGR_CMD_ID_T__OTA_UPDATE_ENABLE_CNF, 0 }


struct  _OtaUpdateDlFinishedInd
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  /*
   * Update status
   */
  OtaStatus status;
  /*
   * The address of the reporting device
   */
  AddressStruct *address;
};
#define OTA_UPDATE_DL_FINISHED_IND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_update_dl_finished_ind__descriptor) \
    , OTA_MGR_CMD_ID_T__OTA_UPDATE_DL_FINISHED_IND, 0, NULL }


struct  _OtaUpdateApplyImageReq
{
  ProtobufCMessage base;
  /*
   * don't change this field
   */
  OtaMgrCmdIdT cmdid;
  /*
   * 
   */
  AddressStruct *address;
};
#define OTA_UPDATE_APPLY_IMAGE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ota_update_apply_image_req__descriptor) \
    , OTA_MGR_CMD_ID_T__OTA_UPDATE_ENABLE_REQ, NULL }


/* AddressStruct methods */
void   address_struct__init
                     (AddressStruct         *message);
size_t address_struct__get_packed_size
                     (const AddressStruct   *message);
size_t address_struct__pack
                     (const AddressStruct   *message,
                      uint8_t             *out);
size_t address_struct__pack_to_buffer
                     (const AddressStruct   *message,
                      ProtobufCBuffer     *buffer);
AddressStruct *
       address_struct__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   address_struct__free_unpacked
                     (AddressStruct *message,
                      ProtobufCAllocator *allocator);
/* OtaZigbeeGenericCnf methods */
void   ota_zigbee_generic_cnf__init
                     (OtaZigbeeGenericCnf         *message);
size_t ota_zigbee_generic_cnf__get_packed_size
                     (const OtaZigbeeGenericCnf   *message);
size_t ota_zigbee_generic_cnf__pack
                     (const OtaZigbeeGenericCnf   *message,
                      uint8_t             *out);
size_t ota_zigbee_generic_cnf__pack_to_buffer
                     (const OtaZigbeeGenericCnf   *message,
                      ProtobufCBuffer     *buffer);
OtaZigbeeGenericCnf *
       ota_zigbee_generic_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_zigbee_generic_cnf__free_unpacked
                     (OtaZigbeeGenericCnf *message,
                      ProtobufCAllocator *allocator);
/* OtaZigbeeGenericRspInd methods */
void   ota_zigbee_generic_rsp_ind__init
                     (OtaZigbeeGenericRspInd         *message);
size_t ota_zigbee_generic_rsp_ind__get_packed_size
                     (const OtaZigbeeGenericRspInd   *message);
size_t ota_zigbee_generic_rsp_ind__pack
                     (const OtaZigbeeGenericRspInd   *message,
                      uint8_t             *out);
size_t ota_zigbee_generic_rsp_ind__pack_to_buffer
                     (const OtaZigbeeGenericRspInd   *message,
                      ProtobufCBuffer     *buffer);
OtaZigbeeGenericRspInd *
       ota_zigbee_generic_rsp_ind__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_zigbee_generic_rsp_ind__free_unpacked
                     (OtaZigbeeGenericRspInd *message,
                      ProtobufCAllocator *allocator);
/* OtaUpdateImageRegisterationReq methods */
void   ota_update_image_registeration_req__init
                     (OtaUpdateImageRegisterationReq         *message);
size_t ota_update_image_registeration_req__get_packed_size
                     (const OtaUpdateImageRegisterationReq   *message);
size_t ota_update_image_registeration_req__pack
                     (const OtaUpdateImageRegisterationReq   *message,
                      uint8_t             *out);
size_t ota_update_image_registeration_req__pack_to_buffer
                     (const OtaUpdateImageRegisterationReq   *message,
                      ProtobufCBuffer     *buffer);
OtaUpdateImageRegisterationReq *
       ota_update_image_registeration_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_update_image_registeration_req__free_unpacked
                     (OtaUpdateImageRegisterationReq *message,
                      ProtobufCAllocator *allocator);
/* OtaUpdateEnableReq methods */
void   ota_update_enable_req__init
                     (OtaUpdateEnableReq         *message);
size_t ota_update_enable_req__get_packed_size
                     (const OtaUpdateEnableReq   *message);
size_t ota_update_enable_req__pack
                     (const OtaUpdateEnableReq   *message,
                      uint8_t             *out);
size_t ota_update_enable_req__pack_to_buffer
                     (const OtaUpdateEnableReq   *message,
                      ProtobufCBuffer     *buffer);
OtaUpdateEnableReq *
       ota_update_enable_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_update_enable_req__free_unpacked
                     (OtaUpdateEnableReq *message,
                      ProtobufCAllocator *allocator);
/* OtaUpdateEnableCnf methods */
void   ota_update_enable_cnf__init
                     (OtaUpdateEnableCnf         *message);
size_t ota_update_enable_cnf__get_packed_size
                     (const OtaUpdateEnableCnf   *message);
size_t ota_update_enable_cnf__pack
                     (const OtaUpdateEnableCnf   *message,
                      uint8_t             *out);
size_t ota_update_enable_cnf__pack_to_buffer
                     (const OtaUpdateEnableCnf   *message,
                      ProtobufCBuffer     *buffer);
OtaUpdateEnableCnf *
       ota_update_enable_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_update_enable_cnf__free_unpacked
                     (OtaUpdateEnableCnf *message,
                      ProtobufCAllocator *allocator);
/* OtaUpdateDlFinishedInd methods */
void   ota_update_dl_finished_ind__init
                     (OtaUpdateDlFinishedInd         *message);
size_t ota_update_dl_finished_ind__get_packed_size
                     (const OtaUpdateDlFinishedInd   *message);
size_t ota_update_dl_finished_ind__pack
                     (const OtaUpdateDlFinishedInd   *message,
                      uint8_t             *out);
size_t ota_update_dl_finished_ind__pack_to_buffer
                     (const OtaUpdateDlFinishedInd   *message,
                      ProtobufCBuffer     *buffer);
OtaUpdateDlFinishedInd *
       ota_update_dl_finished_ind__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_update_dl_finished_ind__free_unpacked
                     (OtaUpdateDlFinishedInd *message,
                      ProtobufCAllocator *allocator);
/* OtaUpdateApplyImageReq methods */
void   ota_update_apply_image_req__init
                     (OtaUpdateApplyImageReq         *message);
size_t ota_update_apply_image_req__get_packed_size
                     (const OtaUpdateApplyImageReq   *message);
size_t ota_update_apply_image_req__pack
                     (const OtaUpdateApplyImageReq   *message,
                      uint8_t             *out);
size_t ota_update_apply_image_req__pack_to_buffer
                     (const OtaUpdateApplyImageReq   *message,
                      ProtobufCBuffer     *buffer);
OtaUpdateApplyImageReq *
       ota_update_apply_image_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ota_update_apply_image_req__free_unpacked
                     (OtaUpdateApplyImageReq *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AddressStruct_Closure)
                 (const AddressStruct *message,
                  void *closure_data);
typedef void (*OtaZigbeeGenericCnf_Closure)
                 (const OtaZigbeeGenericCnf *message,
                  void *closure_data);
typedef void (*OtaZigbeeGenericRspInd_Closure)
                 (const OtaZigbeeGenericRspInd *message,
                  void *closure_data);
typedef void (*OtaUpdateImageRegisterationReq_Closure)
                 (const OtaUpdateImageRegisterationReq *message,
                  void *closure_data);
typedef void (*OtaUpdateEnableReq_Closure)
                 (const OtaUpdateEnableReq *message,
                  void *closure_data);
typedef void (*OtaUpdateEnableCnf_Closure)
                 (const OtaUpdateEnableCnf *message,
                  void *closure_data);
typedef void (*OtaUpdateDlFinishedInd_Closure)
                 (const OtaUpdateDlFinishedInd *message,
                  void *closure_data);
typedef void (*OtaUpdateApplyImageReq_Closure)
                 (const OtaUpdateApplyImageReq *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    zstack_otasys_ids__descriptor;
extern const ProtobufCEnumDescriptor    ota_mgr_cmd_id_t__descriptor;
extern const ProtobufCEnumDescriptor    address_mode__descriptor;
extern const ProtobufCEnumDescriptor    generic_status__descriptor;
extern const ProtobufCEnumDescriptor    ota_status__descriptor;
extern const ProtobufCEnumDescriptor    ota_execute_type__descriptor;
extern const ProtobufCEnumDescriptor    ota_notification_type__descriptor;
extern const ProtobufCEnumDescriptor    ota_update_cnf_status__descriptor;
extern const ProtobufCEnumDescriptor    ota_enable_modes__descriptor;
extern const ProtobufCMessageDescriptor address_struct__descriptor;
extern const ProtobufCMessageDescriptor ota_zigbee_generic_cnf__descriptor;
extern const ProtobufCMessageDescriptor ota_zigbee_generic_rsp_ind__descriptor;
extern const ProtobufCMessageDescriptor ota_update_image_registeration_req__descriptor;
extern const ProtobufCMessageDescriptor ota_update_enable_req__descriptor;
extern const ProtobufCMessageDescriptor ota_update_enable_cnf__descriptor;
extern const ProtobufCMessageDescriptor ota_update_dl_finished_ind__descriptor;
extern const ProtobufCMessageDescriptor ota_update_apply_image_req__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_otasrvr_2eproto__INCLUDED */
